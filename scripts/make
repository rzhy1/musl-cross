#!/bin/bash

set -e
TARGET=$1

# packages
sudo apt-get update
sudo apt-get install -y --no-install-recommends \
  gdb \
  gperf \
  help2man \
  libssl-dev \
  libtool-bin \
  lld
sudo ln -sf /usr/bin/lld /usr/bin/ld
sudo ln -sf /usr/bin/lld /usr/bin/ld.lld
echo "CPU信息"
lscpu

# patch
pushd builder
git reset --hard HEAD
git clean -fd
for i in ../targets/${TARGET}/*; do
    if [[ $i == *.patch ]]; then
        patch -Np1 -i $i
    fi
done
popd

# crosstool-ng
sudo mkdir -p /opt
sudo chmod 0777 /opt
sudo rm -rf /opt/ct-ng
pushd builder
./bootstrap
./configure --prefix=/opt/ct-ng
make -j`nproc`
sudo make install
popd

# build
rm -rf build
mkdir -p build
cp targets/${TARGET}/config build/.config
pushd build
/opt/ct-ng/bin/ct-ng olddefconfig

echo "显示原版"
cat $(pwd)/.config
echo "显示结束"

# 1. 设置并行任务数为0，让crosstool-ng自动使用所有CPU核心
sed -i "s/^CT_PARALLEL_JOBS=.*/CT_PARALLEL_JOBS=3/" $(pwd)/.config

# 2. 设置系统负载限制为0，即不限制，允许CPU满负荷运行
sed -i 's/^CT_LOAD=.*/CT_LOAD=0/' $(pwd)/.config

# 更新gmp
#sed -i "s/^CT_GMP_VERSION=\"[^\"]*\"/CT_GMP_VERSION=\"6.3.0\"/" $(pwd)/.config

# 更新ISL 
sed -i "s/^CT_ISL_VERSION=\"[^\"]*\"/CT_ISL_VERSION=\"0.27\"/" $(pwd)/.config

# 更新MPFR 
sed -i "s/^CT_MPFR_VERSION=\"[^\"]*\"/CT_MPFR_VERSION=\"4.2.2\"/" $(pwd)/.config

# 更新ZSTD 
#sed -i "s/^CT_ZSTD_VERSION=\"[^\"]*\"/CT_ZSTD_VERSION=\"1.5.7\"/" $(pwd)/.config

# 更新binutils
#sed -i "s/^CT_BINUTILS_VERSION=\"[^\"]*\"/CT_BINUTILS_VERSION=\"2.45\"/" $(pwd)/.config

# 更新mingw-w64
#sed -i "s/^CT_MINGW_W64_VERSION=\"[^\"]*\"/CT_MINGW_W64_VERSION=\"v13.0.0\"/" $(pwd)/.config

# 更新gcc
#sed -i "s/^CT_GCC_VERSION=\"[^\"]*\"/CT_GCC_VERSION=\"15.2.0\"/" $(pwd)/.config

echo "显示新版"
cat $(pwd)/.config
echo "显示结束"


/opt/ct-ng/bin/ct-ng build
popd

# tarball
sudo mv /opt/x-tools/${TARGET} .
sudo chown -R root:root ${TARGET}
sudo tar -cJvf ${TARGET}-1.tar.xz ${TARGET}
sudo sha256sum ${TARGET}-1.tar.xz | awk '{ print $1 }' > ${TARGET}-1.tar.xz.sha256
