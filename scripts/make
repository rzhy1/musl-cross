#!/bin/bash

set -e

TARGET="x86_64-w64-mingw32"

# packages
sudo apt-get update
sudo apt-get install -y --no-install-recommends \
  automake \
  bison \
  bzip2 \
  ca-certificates \
  curl \
  file \
  flex \
  g++ \
  gawk \
  gdb \
  git \
  gperf \
  help2man \
  libncurses-dev \
  libssl-dev \
  libtool-bin \
  make \
  patch \
  pkg-config \
  python3 \
  rsync \
  texinfo \
  unzip \
  wget \
  xz-utils \
  ccache

# 设置 ccache
export CCACHE_DIR="$HOME/.ccache"
export PATH="/usr/lib/ccache:$PATH"
ccache --max-size=2G

# patch
#pushd builder
#for i in ../targets/${TARGET}/*; do
#    if [[ $i == *.patch ]]; then
#        patch -Np1 -i $i
#    fi
#done
#popd

# crosstool-ng
echo "编译ct-ng版本"
if [ ! -e /usr/bin/ct-ng ]; then
    pushd builder
    ./bootstrap
    ./configure --prefix=/usr
    make -j`nproc`
    sudo make install
    popd
fi
echo "阿迪斯发顺丰1"
cat /home/runner/work/musl-cross/musl-cross/builder/packages/gcc/14.2.0/version.desc 
# 设置 gcc 版本描述文件
GCC_REPO="http://gcc.gnu.org/git/gcc.git"
GCC_BRANCH="trunk"
GCC_DESC_FILE=/home/runner/work/musl-cross/musl-cross/builder/packages/gcc/14.2.0/version.desc 
> "$GCC_DESC_FILE"
echo "repo = \"$GCC_REPO\"" >> "$GCC_DESC_FILE"
echo "branch = \"$GCC_BRANCH\"" >> "$GCC_DESC_FILE"
echo "阿迪斯发顺丰2"
cat /home/runner/work/musl-cross/musl-cross/builder/packages/gcc/14.2.0/version.desc
echo "阿迪斯发顺丰3"
# build
sudo mkdir -p /opt
sudo chmod 0777 /opt
mkdir -p build
cp targets/${TARGET}/config build/.config
pushd build
ct-ng olddefconfig

# 将 gcc 的来源设置为 git， 并取消 release 和 custom
sed -i 's/CT_GCC_ARCHIVE_FORMATS=".tar.xz .tar.gz"/CT_GCC_ARCHIVE_FORMATS=""/' $(pwd)/.config
sed -i 's/^CT_GCC_SRC_RELEASE=y/# CT_GCC_SRC_RELEASE=y/' $(pwd)/.config
sed -i 's/# CT_GCC_SRC_DEVEL is not set/CT_GCC_SRC_DEVEL=y/' $(pwd)/.config
sed -i 's|CT_GCC_MIRRORS=".*"|CT_GCC_MIRRORS="https://gcc.gnu.org/git/gcc.git"|' $(pwd)/.config
echo 'CT_GCC_DEVEL_URL="https://gcc.gnu.org/git/gcc.git"' >> $(pwd)/.config
echo 'CT_GCC_DEVEL_BRANCH="master"' >> $(pwd)/.config

sed -i 's/CT_GMP_VERSION="6.2.1"/CT_GMP_VERSION="6.3.0"/' $(pwd)/.config
sed -i 's/CT_ISL_VERSION="0.26"/CT_ISL_VERSION="0.27"/' $(pwd)/.config
sed -i 's|CT_GMP_MIRRORS="https://gmplib.org/download/gmp https://gmplib.org/download/gmp/archive $(CT_Mirrors GNU gmp)"|CT_GMP_MIRRORS="https://gmplib.org/download/gmp $(CT_Mirrors GNU gmp)"|' $(pwd)/.config
sed -i 's|CT_MPC_MIRRORS="https://www.multiprecision.org/downloads $(CT_Mirrors GNU mpc)"|CT_MPC_MIRRORS="https://ftp.gnu.org/gnu/mpc $(CT_Mirrors GNU mpc)"|' $(pwd)/.config
echo "显示"
cat $(pwd)/.config
echo "显示1"
#git ls-remote https://gcc.gnu.org/git/gcc.git trunk
sudo find / -type f -name "version.desc"
echo "显示2"
ct-ng build.$(nproc)
popd

# 删除临时文件
sudo mv /opt/x-tools/${TARGET} .
sudo chown -R root:root ${TARGET}
sudo tar -cJvf ${TARGET}.tar.xz ${TARGET}
sudo sha256sum ${TARGET}.tar.xz | awk '{ print $1 }' > ${TARGET}.tar.xz.sha256

# 输出 ccache 使用情况
ccache --show-stats
